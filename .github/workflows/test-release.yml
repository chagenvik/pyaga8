name: Test Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        # python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10"]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install maturin
      run: pip install maturin
    - name: Build the package
      run: maturin build --release
    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.os }}-${{ matrix.python-version }}
        path: target/wheels/*.whl

  upload-source:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Install maturin
      run: pip install maturin
    - name: Create source distribution
      run: maturin sdist
    - name: Upload source distribution
      uses: actions/upload-artifact@v4
      with:
        name: dist-source-ubuntu-latest-3.9
        path: target/wheels/*.tar.gz

  test-publish:
    runs-on: ubuntu-latest
    needs: [build-and-test, upload-source]
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: dist-*
        path: dist
    - name: Test publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine==6.0.1
        twine check dist*/*.whl dist*/*.tar.gz