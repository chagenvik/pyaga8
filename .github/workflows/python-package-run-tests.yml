# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, ubuntu-20.04, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Lint Rust code
      run: |
        cargo clippy
    - name: Install dependencies
      run: |
        python -m venv .venv
        . ./.venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install maturin
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        maturin develop
      shell: bash
    - name: Install dependencies on Windows
      if: runner.os == 'Windows'
      run: |
        python -m venv .venv
        .\.venv\Scripts\activate
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install maturin
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
        maturin develop
      shell: pwsh
    - name: Lint with flake8
      run: |
        . ./.venv/bin/activate
        flake8 .
      shell: bash
    - name: Lint with flake8 on Windows
      if: runner.os == 'Windows'
      run: |
        .\.venv\Scripts\activate
        flake8 .
      shell: pwsh
    - name: Test with pytest
      run: |
        . ./.venv/bin/activate
        pytest -v
